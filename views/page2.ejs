<!DOCTYPE HTML>
<!--
	Striped by HTML5 UP
	html5up.net | @n33co
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
	<head>
		<% include templates/header.ejs %>
	</head>
	<body>

		<!-- Content -->
			<div id="content">
				<div class="inner">

					<!-- Post -->
          <article class="box post post-excerpt">
            <header>
              <h2><a href="#">Creating Objects and Type Declaration:</a></h2>
            </header>
            <p>
							<strong>Type Declaration:</strong><br>
              At this point you may have noticed that creating variables in Java is not the same as creating variables in Python. Java is considered a "statically typed" language in that it requires all variables to have a specified data type upon declaration. For example if we wanted to store a Cat object in a variable called "whiskers", we would write:
            </p>
            <!-- Text -->
            <section class="box text-style1">
              <div class="inner">
                <p>
                  Cat whiskers = new Cat();
                </p>
              </div>
            </section>
            <p>
              If you wanted to create a variable called "number" to store the integer 1, you would write:
            </p>
            <section class="box text-style1">
              <div class="inner">
                <p>
                  int number = 1;
                </p>
              </div>
            </section>
          <p>
						A variable's type determines the values that it may contain, and the operations that may be performed on it. Once a variable is declared to be of a certain type, you no longer need to mention its type when referencing it. In fact, doing so will produce an error because type declaration can only be done when declaring a new variable. Additionally, it is important to note that the type of a variable cannot be changed. However, the variable can be reassinged to access another object given that that object is of the same type or a subtype of its declared type. So, for example, you wanted to change the value of "number" to 6 you would simply write:
					</p>
					<section class="box text-style1">
						<div class="inner">
							<p>
								number = 6;
							</p>
						</div>
					</section>
					<p>
						 In the first two examples, you may have noticed that the "Cat" type is captialized and the "int" type is not. Most types are capitalized because they indicate the Class of objects that a variable is associated with (and the names of all classes are capitalized). "Cat" is the name of some class called Cat. The "int" type is not capitalized because it is a <strong>primitive</strong> type. Primitive types store the most basic types of data and form the building blocks for computation in Java, and are thus given special properties. Check out the <a href ="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html">Java documentation on primitives</a> for a more in depth discussion of what primitives are and what properties they have.
          </p>
          <p>
            <Strong>Check 1:</strong> The following program should add two integers a and b and print the outcome. Fill in the empty or incomplete lines so that it does so.
          </p>
          <div id = "java_editor_03"></div>
          <p>
            Line 7:
          </p>
          <!-- Answer -->
					<section class="box search">
						<form action="endpoint">
							<input autocomplete="off" reference ="question2" type="text" class="answer" name="search" placeholder="Answer" />
							<div id = "question2"></div>
						</form>
					</section>
          <p>
            Line 9:
          </p>
          <!-- Answer -->
					<section class="box search">
						<form action="endpoint">
							<input autocomplete="off" reference ="question3" type="text" class="answer" name="search" placeholder="Answer" />
							<div id = "question3"></div>
						</form>
					</section>
					<p>
						<strong>Creating Objects</strong><br>
						In the Cat and int examples above, you probably noticed that an int and a Cat are not created in the same way. Unlike primitives, objects of a certain class type are individual "instances" of that class. Thus, whenever we want to create a new instance of a class (a new object), Java requires the use of the keyword "new". Here's how we would create a new object of type "Ball" named "basketball":
					</p>
					<section class="box text-style1">
						<div class="inner">
							<p>
								Ball basketball = new Ball();
							</p>
						</div>
					</section>
					<p>
						 Because creating a new object requires creating a new instance of a class, the process of bringing this new instance into existance is called <strong>instantiation</strong>. The portion of the code that comes after "new" (in this case "Ball();") is a call to the <string>constructor</strong> of the specified class, which initializes a new instance of that class. <strong>Initialization</strong> is the process of filling the newly created class object with actual data. We will talk more in depth about constructors in the section titled "Classes, Objects, Class Methods & Variables". You can find more information on declartion, instantiation and initialization  <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/objectcreation.html">here</a>.
					</p>
					<br>
					<strong>Final Check:</strong><br>
					Write the line of code that instantiates a new object called "balloon" of class "Orb":
					<section class="box search">
						<form action="endpoint">
							<input autocomplete="off" reference ="question2_1" type="text" class="answer" name="search" placeholder="Answer" />
							<div id = "question2_1"></div>
						</form>
					</section>
          </article>
					<!-- Pagination -->
						<div class="pagination">
							<!--<a href="#" class="button previous">Previous Page</a>-->
							<a href="/" class="button next">Introduction</a>
							<a href="/page3" class="button next">Lists and For Loops</a>
						</div>
				</div>
			</div>

		<!-- Sidebar -->
			<% include templates/sidebar.ejs %>

		<!-- Scripts -->
      <% include templates/default_scripts.ejs %>
			<script>
				getFileContents.init(["https://raw.githubusercontent.com/johniblake/Java_Tutor/master/public/example_code/java/example_03/intSum.java","java_editor_03"]);

				setEditor.init(["java_editor_03","java"]);
			</script>

	</body>
</html>
